{"version":3,"file":"component---src-pages-index-js-59bfeacf1a693b36585d.js","mappings":"oLAKWA,EAAY,iCCiCvB,EA5Bc,SAAC,GAAe,IAIPC,EAJNC,EAAY,EAAZA,MAEf,GAA0CC,EAAAA,EAAAA,WAAS,GAA5CC,EAAP,KAAsBC,EAAtB,KAQA,OACE,gCACE,uBACEC,UAAWC,mCAAmBH,EDrBhB,gCCqB2C,IACzDI,SAVeP,EAUMC,EAVE,WAC3BG,GAAiB,GACjBI,YAAW,kBAAMJ,GAAiB,KAAQ,KAC1CK,UAAUC,UAAUC,UAAUX,MAS1B,uBAAKK,UAAWN,GAAYE,GAC5B,0BAAKA,IAENE,GACC,uBAAKE,UD1BiB,yCC0BtB,UACS,wBAAMA,UAAWN,GAAYE,GADtC,KACsDA,EADtD,oBCNR,EAlBY,WACV,OACE,uBAAKI,UCPQ,0BDQX,wBAAMA,UAAS,sCACb,0CAIF,qBAAGA,UAAU,oBAAoBO,OAAO,SAASC,KAAK,sEAAtD,YAGA,qBAAGR,UAAU,oBAAoBO,OAAO,SAASC,KAAK,sEAAtD,YEXAC,EAAa,CACjB,CACEC,MAAO,WACPC,OAAQ,CACN,SACA,WACA,UACA,YACA,SACA,SACA,cAGJ,CACED,MAAO,SACPC,OAAQ,CACN,UACA,WACA,YACA,aACA,YACA,aACA,KACA,WA+BN,EAzBkB,kBAChB,gCACE,gBAAC,EAAD,MACA,0CACA,sBAAIX,UAAU,MAAd,aACA,mHACyF,mCADzF,KAC2G,oCAD3G,QACiI,qCADjI,YAEE,2BAFF,qEAGoE,qBAAGQ,KAAK,gBAAgBD,OAAO,UAA/B,UAHpE,2CAG8J,qBAAGC,KAAK,6BAAR,UAH9J,6CAIE,2BAJF,IAME,2BACA,4BAEDC,EAAWG,KAAI,SAAAC,GAAG,OACjB,uBAAKC,IAAKD,EAAIH,OACZ,uBAAKV,UAAU,YACZa,EAAIH,OAENG,EAAIF,QAAUE,EAAIF,OAAOC,KAAI,SAAAhB,GAAK,OAAI,gBAAC,EAAD,CAAOA,MAAOA,EAAOkB,IAAKlB","sources":["webpack://web3-regular-docs/./src/components/Glyph.module.css","webpack://web3-regular-docs/./src/components/Glyph.js","webpack://web3-regular-docs/./src/components/Nav.js","webpack://web3-regular-docs/./src/components/Nav.module.css","webpack://web3-regular-docs/./src/pages/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var glyphWrap = \"Glyph-module--glyphWrap--E5UGK\";\nexport var clipping = \"Glyph-module--clipping--RexAi\";\nexport var clippingFlash = \"Glyph-module--clipping-flash--vgE9i\";\nexport var clipNotification = \"Glyph-module--clipNotification--5E-Ln\";\nexport var glyphItem = \"Glyph-module--glyphItem--9h4aU\";","import * as React from 'react'\nimport { useState } from 'react'\n\nimport {\n  glyphWrap,\n  glyphItem,\n  clipping,\n  clipNotification\n} from './Glyph.module.css'\n\nconst Glyph = ({ glyph }) => {\n\n  const [isJustClipped, setIsJustClipped] = useState(false);\n\n  const toClipboard = (str) => () => {\n    setIsJustClipped(true)\n    setTimeout(() => setIsJustClipped(false), 800)\n    navigator.clipboard.writeText(str)\n  }\n\n  return (\n    <>\n      <div\n        className={glyphWrap + ' ' + (isJustClipped ? clipping : '')}\n        onClick={toClipboard(glyph)}\n      >\n        <div className={glyphItem}>{glyph}</div>\n        <h4>{glyph}</h4>\n      </div>\n      {isJustClipped &&\n        <div className={clipNotification}>\n          Copied <span className={glyphItem}>{glyph}</span> ({glyph}) to clipboard\n        </div>\n      }\n    </>\n  );\n}\n\nexport default Glyph;\n","import * as React from \"react\"\nimport {\n  nav,\n  logo\n} from './Nav.module.css'\n\nconst Nav = () => {\n  return (\n    <div className={nav}>\n      <span className={`buttonText ${logo}`}>\n        <b>\n          Web3-Regular\n        </b>\n      </span>\n      <a className=\"button buttonText\" target=\"_blank\" href=\"https://github.com/goldsteinsveta/web3-regular/releases/tag/211210\">\n        Download\n      </a>\n      <a className=\"button buttonText\" target=\"_blank\" href=\"https://github.com/goldsteinsveta/web3-regular/releases/tag/211210\">\n        GitHub\n      </a>\n    </div>\n  );\n}\n\nexport default Nav;\n","// extracted by mini-css-extract-plugin\nexport var nav = \"Nav-module--nav--vaxp9\";\nexport var logo = \"Nav-module--logo--VKG8X\";","import * as React from \"react\"\nimport Glyph from '../components/Glyph'\nimport Nav from \"../components/Nav\"\nimport \"./index.css\"\n\n// data\nconst glyphsSets = [\n  {\n    title: \"Networks\",\n    glyphs: [\n      \"kusama\",\n      \"polkadot\",\n      \"westend\",\n      \"substrate\",\n      \"rococo\",\n      \"kulupu\",\n      \"statemine\",\n    ]\n  },\n  {\n    title: \"Actors\",\n    glyphs: [\n      \"account\",\n      \"accounts\",\n      \"validator\",\n      \"validators\",\n      \"nominator\",\n      \"nominators\",\n      \"to\",\n      \"block\",\n    ]\n  },\n]\n\n// markup\nconst IndexPage = () => (\n  <>\n    <Nav />\n    <h1>Web3-Regular</h1>\n    <h3 className=\"o5\">Icon font</h3>\n    <p>\n      Web3-Regular is a toy-project. It's a collection of logos and icons for things Web3 in <code>otf</code>, <code>woff</code> and <code>woff2</code> formats.\n      <br/>\n      It's a personal everyday itch-scratcher and a playground to learn <a href=\"glyphsapp.com\" target=\"_blank\">Glyphs</a> font design software and what this hot <a href=\"https://www.gatsbyjs.com/\">Gatsby</a> js framework is all about simultaneously.\n      <br />\n      _\n      <br />\n      <br />\n    </p>\n    {glyphsSets.map(set => (\n      <div key={set.title}>\n        <div className=\"overline\">\n          {set.title}\n        </div>\n        {set.glyphs && set.glyphs.map(glyph => <Glyph glyph={glyph} key={glyph} />)}\n      </div>\n    ))}\n  </>\n)\n\nexport default IndexPage\n"],"names":["glyphItem","str","glyph","useState","isJustClipped","setIsJustClipped","className","glyphWrap","onClick","setTimeout","navigator","clipboard","writeText","target","href","glyphsSets","title","glyphs","map","set","key"],"sourceRoot":""}